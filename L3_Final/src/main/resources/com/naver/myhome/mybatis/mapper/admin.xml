<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.naver.myhome.mybatis.mapper.AdminMapper">

	<!-- 지니 -->
	<!-- 정상 -->
	<select id="findEmployee" resultType="employee">
		select u.user_photo, e.employee_no ,u.user_name, e.department, e.position, u.user_email, u.user_phone,
		e.employee_auth 
		from employee e
			inner join
    			usr u on e.user_id = u.user_id
		where e.company_id = #{company_id}
		and e.employee_status = 0
		order by u.user_name
	</select>
	
	<select id="countEmployee" resultType="int">
		select count (*) as countValue
		from employee e
			inner join 
			     usr u on e.user_id = u.user_id
		WHERE e.company_id = #{company_id}
	    and e.employee_status = 0
	</select>
	
	<!-- 이용중지 -->
	 <select id="stopEmployee" resultType="employee">
		select u.user_photo, e.employee_no ,u.user_name, e.department, e.position, u.user_email, u.user_phone,
		e.employee_auth 
		from employee e
			inner join
    			usr u on e.user_id = u.user_id
		where e.company_id = #{company_id}
		and e.employee_status=1
		order by u.user_name
	</select>
	
	<select id="countStopEmployee" resultType="int">
		select count (*) as countStopValue
		from employee e
			inner join 
			     usr u on e.user_id = u.user_id
		WHERE e.company_id = #{company_id}
		and e.employee_status=1
	</select>
	
	<!-- 이용중지 업데이트 -->
	<update id="stopEmployeeStatus" parameterType="int">
	update employee
	set employee_status= 1
	where employee_no=#{employee_no}
	</update>
	
	<update id="useEmployeeStatus" parameterType="int">
	update employee
	set employee_status= 0
	where employee_no=#{employee_no}
	</update>
	
	<!-- 관리자 유무 업데이트 -->
	<update id="noMoreAuth" parameterType="int">
	update employee
	set employee_Auth= 'N'
	where employee_no=#{employee_no}
	</update>
	
	<update id="addAuth" parameterType="int">
	update employee
	set employee_Auth= 'Y'
	where employee_no=#{employee_no}
	</update>
	
	<!-- 가입승인 후 직원 추가 -->
	<insert id="addEmployee" >
	INSERT INTO employee (employee_no, company_id, company_invited, user_id)
    VALUES (employee_seq.nextval, #{company_id}, #{company_invited}, #{user_id} )
	</insert>
	
	<!-- 회사 정보 -->
	<select id="companyInfo" resultType="company">
	select company_name, company_domain 
	from company
	where company_id = #{company_id}
	</select>
 
 	<!-- 회사명 업데이트 -->
 	<update id ="updateCompanyName">
 	update company
 	set company_name = 
 	</update>
</mapper>